generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  company_name String
  fantasy_name String?
  cnpj         String      @unique
  email        String      @unique
  password     String
  segment      String
  userType     UserType
  cep          String?
  number       String?
  city         String?
  uf           String?
  neighborhood String?
  street       String?
  phone        String
  challenges   Challenge[]
  employees    Employee[]
  gruops       Group[]
}

model Employee {
  id          Int        @id @default(autoincrement())
  playfab_id  String?
  name        String
  email       String     @unique
  cpf         String     @unique
  birth_date  DateTime
  sex         Sex
  url_img     Bytes?
  user_id     Int
  group_id    Int?
  recorded_at DateTime   @default(now())
  activities  Activity[]
  group       Group?     @relation(fields: [group_id], references: [id])
  user        User       @relation(fields: [user_id], references: [id])
}

model Activity {
  id          Int      @id @default(autoincrement())
  time        Int
  distance    Float
  rhythm      Float
  calories    Float
  employee_id Int
  date        DateTime @default(now())
  employee    Employee @relation(fields: [employee_id], references: [id])
}

model Challenge {
  id          Int           @id @default(autoincrement())
  days        Int
  distance    Float
  url_img     Bytes?
  reward_msg  String?
  expires_at  DateTime
  type        ChallengeType
  has_started Boolean       @default(false)
  has_reward  Boolean       @default(false)
  user_id     Int
  created_at  DateTime      @default(now())
  user        User          @relation(fields: [user_id], references: [id])
}

model Group {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  url_img     Bytes?
  user_id     Int
  recorded_at DateTime   @default(now())
  members     Employee[]
  user        User       @relation(fields: [user_id], references: [id])
}

enum UserType {
  COMPANY
  COMPANY_SERVICE
  PARTNER
}

enum Sex {
  MALE
  FEMALE
  OTHER
}

enum ChallengeType {
  DISTANCE
  TIME
}
